drop table if exists BOOKINGS;
drop table if exists comments;
drop table if exists items;
drop table if exists users;
DROP TYPE IF EXISTS booking_status;

create type booking_status as enum ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED');

create TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(255) NOT NULL,
email VARCHAR(512) NOT NULL,
CONSTRAINT pk_user PRIMARY KEY (id),
CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);
create TABLE IF NOT EXISTS items (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(100),
description varchar(200),
is_available BOOLEAN,
user_id BIGINT,
request_id BIGINT,
CONSTRAINT fk_items_to_users FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS BOOKINGS (
ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
START_DATE TIMESTAMP WITHOUT TIME ZONE,
END_DATE TIMESTAMP WITHOUT TIME ZONE,
ITEM_ID BIGINT,
BOOKER_ID BIGINT,
STATUS varchar,
constraint FK_BOOKINGS_TO_ITEMS FOREIGN KEY (ITEM_ID) references ITEMS(ID) ON DELETE CASCADE,
constraint FK_BOOKINGS_TO_USERS FOREIGN KEY (BOOKER_ID) references USERS(ID) ON DELETE CASCADE
);

create table if not exists comments (
id bigint generated by default as identity primary key not null,
text varchar not null,
item_id bigint not null,
author_id bigint not null,
constraint fk_cooments_to_items foreign key (item_id) references items(id),
constraint fk_cooments_to_users foreign key (author_id) references users(id)
);